@use 'sass:color';
@use '../styles/_notification-variables.scss' as vars;
@use '../styles/_notification-mixins.scss' as mixins;

.notification-toast {
  position: relative;
  min-width: 300px;
  max-width: 500px;
  border-radius: vars.$border-radius;
  overflow: hidden;
  box-shadow: vars.$shadow-elevated;
  background-color: var(--notification-bg);
  color: var(--notification-text);
  border-left: 4px solid var(--notification-accent);

  // Tipos de notificaci√≥n
  &[data-type="success"] {
    @include mixins.notification-theme(vars.$success-color);
  }

  &[data-type="error"] {
    @include mixins.notification-theme(vars.$error-color);
  }

  &[data-type="warning"] {
    @include mixins.notification-theme(vars.$warning-color);
  }

  &[data-type="info"] {
    @include mixins.notification-theme(vars.$info-color);
  }
}

.notification-progress {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  z-index: 1;

  ::ng-deep mat-progress-bar {
    height: 3px;

    .mat-mdc-progress-bar-buffer {
      background-color: transparent;
    }
  }
}

.notification-content {
  display: flex;
  align-items: flex-start;
  gap: vars.$spacing-md;
  padding: vars.$spacing-lg;
  min-height: 48px;
}

.notification-icon {
  flex-shrink: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;

  mat-icon {
    font-size: 20px;
    width: 20px;
    height: 20px;
    color: var(--notification-accent);
  }
}

.notification-message {
  flex: 1;
  display: flex;
  align-items: center;
  min-height: 24px;
  font-size: vars.$font-size-sm;
  line-height: vars.$line-height-relaxed;
  color: var(--notification-text);

  // Soporte para HTML en mensajes
  ::ng-deep {
    a {
      color: var(--notification-accent);
      text-decoration: underline;

      &[data-type="success"] &:hover {
        color: color.adjust(vars.$success-color, $lightness: 10%);
      }
      &[data-type="error"] &:hover {
        color: color.adjust(vars.$error-color, $lightness: 10%);
      }
      &[data-type="warning"] &:hover {
        color: color.adjust(vars.$warning-color, $lightness: 10%);
      }
      &[data-type="info"] &:hover {
        color: color.adjust(vars.$info-color, $lightness: 10%);
      }
    }

    strong, b {
      font-weight: vars.$font-weight-semibold;
    }

    em, i {
      font-style: italic;
    }
  }
}

.notification-actions {
  flex-shrink: 0;
  display: flex;
  align-items: center;
  gap: vars.$spacing-xs;
  margin-left: auto;
}

.notification-action-btn {
  @include mixins.button-reset;
  padding: vars.$spacing-xs vars.$spacing-sm;
  border-radius: vars.$border-radius-sm;
  font-size: vars.$font-size-xs;
  font-weight: vars.$font-weight-medium;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  color: var(--notification-accent);
  background-color: transparent;
  border: 1px solid var(--notification-accent);
  transition: all vars.$transition-fast;

  &:hover {
    background-color: var(--notification-accent);
    color: var(--notification-bg);
  }

  &:focus-visible {
    @include mixins.focus-ring(var(--notification-accent));
  }
}

.notification-dismiss-btn {
  @include mixins.button-reset;
  width: 32px;
  height: 32px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--notification-text-secondary);
  background-color: transparent;
  transition: all vars.$transition-fast;

  &[data-type="success"] &:hover {
    background-color: color.adjust(vars.$success-color, $alpha: -0.9);
    color: var(--notification-text);
  }
  &[data-type="error"] &:hover {
    background-color: color.adjust(vars.$error-color, $alpha: -0.9);
    color: var(--notification-text);
  }
  &[data-type="warning"] &:hover {
    background-color: color.adjust(vars.$warning-color, $alpha: -0.9);
    color: var(--notification-text);
  }
  &[data-type="info"] &:hover {
    background-color: color.adjust(vars.$info-color, $alpha: -0.9);
    color: var(--notification-text);
  }

  &:focus-visible {
    @include mixins.focus-ring(var(--notification-accent));
  }

  mat-icon {
    font-size: 18px;
    width: 18px;
    height: 18px;
  }
}

// Animaciones de entrada y salida
:host {
  display: block;
  animation: slideInUp vars.$animation-duration-normal vars.$animation-easing;
}

:host.mat-mdc-snack-bar-container-exit {
  animation: slideOutDown vars.$animation-duration-fast vars.$animation-easing;
}

@keyframes slideInUp {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideOutDown {
  from {
    transform: translateY(0);
    opacity: 1;
  }
  to {
    transform: translateY(100%);
    opacity: 0;
  }
}

// Responsive
@media (max-width: vars.$breakpoint-sm) {
  .notification-toast {
    min-width: 280px;
    max-width: calc(100vw - 32px);
  }

  .notification-content {
    padding: vars.$spacing-md;
    gap: vars.$spacing-sm;
  }

  .notification-message {
    font-size: vars.$font-size-xs;
  }
}

// Modo oscuro
@media (prefers-color-scheme: dark) {
  .notification-toast {
    box-shadow: vars.$shadow-elevated-dark;
  }
}

// Reducir movimiento
@media (prefers-reduced-motion: reduce) {
  :host,
  :host.mat-mdc-snack-bar-container-exit {
    animation: none;
  }

  .notification-action-btn,
  .notification-dismiss-btn {
    transition: none;
  }
}